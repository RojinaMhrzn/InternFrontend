{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/rojina001/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./tictac.css\";\nexport function CalculateWinner(board) {\n  const winners = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < winners.length; i++) {\n    const [one, two, three] = winners[i];\n    const boardOne = board[one];\n\n    if (boardOne && boardOne === board[two] && boardOne === board[three]) {\n      return [true, boardOne, [one, two, three]];\n    }\n  }\n\n  const m = winners.length;\n  console.log(m);\n  return [false, \"\", []];\n}\n_c = CalculateWinner;\nexport function Square({\n  className,\n  buttonNumber,\n  handleClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: className,\n    onClick: handleClick,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: buttonNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Square;\nexport function Board({\n  board,\n  squareClick,\n  isWinner,\n  winners\n}) {\n  const SquareType = i => {\n    const classType = type => {\n      return `number ${i} ${type}`;\n    };\n\n    let win = winners.some(winner => winner === i);\n\n    if (isWinner) {\n      if (win) {\n        return classType(\"winner\");\n      }\n    }\n\n    return classType(\"lose\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: board.map((number, i) => {\n      return /*#__PURE__*/_jsxDEV(Square, {\n        className: SquareType(i),\n        buttonNumber: number,\n        handleClick: () => squareClick(i)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Board;\n\nfunction TicTacToe() {\n  _s();\n\n  let [history, setHistory] = useState([{\n    squares: Array(9).fill(null)\n  }]);\n  let [move, setMove] = useState(0);\n  let [turn, setTurn] = useState(false);\n  let isNext = turn ? \"O\" : \"X\";\n  let currentSquares = history[move].squares;\n  let [isWinner, whoWin, winners] = CalculateWinner(currentSquares);\n\n  let nturn = /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"turn\",\n    children: [\"Next turn? \", isNext]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 15\n  }, this);\n\n  let winner = /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"winner-header\",\n    children: [\" Winner \", whoWin]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 16\n  }, this);\n\n  function handleSquareClick(i) {\n    let current = history.slice(0, move + 1);\n    let currentHistory = current[move].squares;\n    const newArr = [...currentHistory];\n    newArr[i] = isNext;\n    setHistory(prevHistory => {\n      let newHistory = {\n        squares: newArr\n      };\n      return [...current, newHistory];\n    });\n    setMove(prevMove => {\n      return prevMove + 1;\n    });\n    setTurn(prev => !prev);\n  } // function handleMove(i) {\n  //   setMove(i);\n  //   setTurn(prev => !prev);\n  // }\n\n\n  function handleClear() {\n    setHistory([{\n      squares: Array(9).fill(null)\n    }]);\n    setMove(0);\n  } // function handleClick(i) {\n  //   const squares = this.state.squares.slice();\n  //   if (calculateWinner(squares) || squares[i]) {     \n  //      return;    \n  //     }    \n  //      squares[i] = this.state.xIsNext ? 'X' : 'O';\n  //   this.setState({\n  //     squares: squares,\n  //     xIsNext: !this.state.xIsNext,\n  //   });\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"AppHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"TIC TAC TOE \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), isWinner ? winner : nturn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"clear-game\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clear-btn\",\n        onClick: handleClear,\n        children: \"clear game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"steps-moves\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          board: history[move].squares,\n          squareClick: handleSquareClick,\n          isWinner: isWinner,\n          winners: winners\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TicTacToe, \"QLmjVOQ3UcThhOE5jfV9dBeB950=\");\n\n_c4 = TicTacToe;\nexport default TicTacToe;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CalculateWinner\");\n$RefreshReg$(_c2, \"Square\");\n$RefreshReg$(_c3, \"Board\");\n$RefreshReg$(_c4, \"TicTacToe\");","map":{"version":3,"sources":["/home/rojina001/my-app/src/App.js"],"names":["React","useState","CalculateWinner","board","winners","i","length","one","two","three","boardOne","m","console","log","Square","className","buttonNumber","handleClick","Board","squareClick","isWinner","SquareType","classType","type","win","some","winner","map","number","TicTacToe","history","setHistory","squares","Array","fill","move","setMove","turn","setTurn","isNext","currentSquares","whoWin","nturn","handleSquareClick","current","slice","currentHistory","newArr","prevHistory","newHistory","prevMove","prev","handleClear"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./tictac.css\";\n\nexport function CalculateWinner(board) {\n  const winners = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n\n  for (let i = 0; i < winners.length; i++) {\n    const [one, two, three] = winners[i];\n    const boardOne = board[one];\n    if (boardOne && boardOne === board[two] && boardOne === board[three]) {\n      return [true, boardOne, [one, two, three]];\n    }\n  }\n  const m = winners.length;\n  console.log(m);\n  return [false, \"\", []];\n}\n\nexport function Square({ className, buttonNumber, handleClick }) {\n  return (\n    <button type=\"button\" className={className} onClick={handleClick}>\n      <span>{buttonNumber}</span>\n    </button>\n  );\n}\n\nexport function Board({ board, squareClick, isWinner, winners }) {\n  const SquareType = i => {\n    const classType = type => {\n      return `number ${i} ${type}`;\n    };\n    let win = winners.some(winner => winner === i);\n    if (isWinner) {\n      if (win) {\n        return classType(\"winner\");\n      }\n    }\n    return classType(\"lose\");\n  };\n\n  return (\n    <div className=\"board\">\n      {board.map((number, i) => {\n        return (\n          <Square\n            key={i}\n            className={SquareType(i)}\n            buttonNumber={number}\n            handleClick={() => squareClick(i)}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nfunction TicTacToe() {\n  let [history, setHistory] = useState([\n    {\n      squares: Array(9).fill(null)\n    }\n  ]);\n  let [move, setMove] = useState(0);\n  let [turn, setTurn] = useState(false);\n\n  let isNext = turn ? \"O\" : \"X\";\n\n  let currentSquares = history[move].squares;\n  let [isWinner, whoWin, winners] = CalculateWinner(currentSquares);\n\n  let nturn = <h2 className=\"turn\">Next turn? {isNext}</h2>;\n  let winner = <h2 className=\"winner-header\"> Winner {whoWin}</h2>;\n\n  function handleSquareClick(i) {\n    let current = history.slice(0, move + 1);\n    let currentHistory = current[move].squares;\n    const newArr = [...currentHistory];\n    newArr[i] = isNext;\n    setHistory(prevHistory => {\n      let newHistory = {\n        squares: newArr\n      };\n      return [...current, newHistory];\n    });\n    setMove(prevMove => {\n      return prevMove + 1;\n    });\n    setTurn(prev => !prev);\n  }\n\n  // function handleMove(i) {\n  //   setMove(i);\n  //   setTurn(prev => !prev);\n  // }\n\n  function handleClear() {\n    setHistory([{ squares: Array(9).fill(null) }]);\n    setMove(0);\n  }\n\n  // function handleClick(i) {\n  //   const squares = this.state.squares.slice();\n  //   if (calculateWinner(squares) || squares[i]) {     \n  //      return;    \n  //     }    \n  //      squares[i] = this.state.xIsNext ? 'X' : 'O';\n  //   this.setState({\n  //     squares: squares,\n  //     xIsNext: !this.state.xIsNext,\n  //   });\n  // }\n\n  return (\n    <div className=\"App\">\n      <header className=\"AppHeader\">\n        <h1 className=\"title\">TIC TAC TOE </h1>\n        {isWinner ? winner : nturn}\n      </header>\n      <section className=\"clear-game\">\n        <button className=\"clear-btn\" onClick={handleClear}>\n          clear game\n        </button>\n      </section>\n      <div className=\"game\">\n        <div className=\"steps-moves\">\n          <Board\n            board={history[move].squares}\n            squareClick={handleSquareClick}\n            isWinner={isWinner}\n            winners={winners}\n          />\n        </div>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default TicTacToe;\n\n\n\n"]},"metadata":{},"sourceType":"module"}